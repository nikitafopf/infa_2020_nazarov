import pygame
from pygame.draw import *
from random import randint

WIDTH = 700
HEIGHT = 500
FPS = 60

score = 0
number = 10
k = 0 #костыль
coef_decreasing = 0.15 #коэф убывания полоски таймера
bonus_length = 75
aims = []

class Ball():
    
    def __init__(self):
        self.x = randint(0, WIDTH)
        self.y = randint(0, HEIGHT)
        self.radius = randint(20,35)
        self.vertical_speed = randint(-6, 6)
        self.horisontal_speed = randint(-6,6)
        self.hp = 1
        self.color = (randint(25,255), randint(25,255), randint(25,255))
        
    def move(self):        
        self.x += self.horisontal_speed
        self.y += self.vertical_speed
    
    def draw(self):
        circle(screen, self.color, (self.x, self.y), self.radius)
        
    def check_collision(self):
        if self.x >= WIDTH or self.x <= 0:
            self.horisontal_speed *= -1
        if self.y >= HEIGHT or self.y <= 0:
            self.vertical_speed *= -1
            
    def kill(self):
           del self


class Timer():
    
    def __init__(self):
        self.length = WIDTH
        self.height = int(round(HEIGHT / 25))
        self.speed = int(round(WIDTH * coef_decreasing / FPS))
    
    def change(self):
        self.length -= self.speed
    
    def draw(self):
        if self.length > 0:
            pygame.draw.rect(screen, (255, 0, 0), (0, 0, self.length, self.height))
            

def new_aim():
    length = len(aims)
    if length % 2 == 0:
        ball = Ball()
        aims.append(ball)
        
screen = pygame.display.set_mode((WIDTH, HEIGHT))
timer = Timer()
for i in range(10):
    ball = Ball()
    aims.append(ball)
clock = pygame.time.Clock()
pygame.init()
finished = False

while not finished:
    clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finished = True
        if event.type == pygame.MOUSEBUTTONDOWN:
            for ball in aims:
                if (event.pos[0] - ball.x)**2 + (event.pos[1] - ball.y)**2 <= ball.radius**2:
                    aims.remove(ball)
                    timer.length += bonus_length
                    k += 1     
                if k % 3 == 0:
                    new_aim()
                    k=0                    
    for ball in aims:
        ball.move()
        ball.draw()
        ball.check_collision()
        if ball.hp < 0:
            ball.kill()
    number = len(aims)
    timer.change()
    timer.draw()
    pygame.display.update()
    if timer.length < 0 and number > 0:
        screen.fill((255,0,0))
        aims.clear()
    if number == 0 and timer.length > 0:
        screen.fill((0,255,0))
        timer.speed = 0
        timer.length = 0
    if number > 0 and timer.length > 0:
        screen.fill((0,0,0))
pygame.quit()
